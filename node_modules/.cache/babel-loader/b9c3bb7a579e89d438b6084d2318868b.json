{"remainingRequest":"/Users/Apple/Project/Rush/node_modules/babel-loader/lib/index.js!/Users/Apple/Project/Rush/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Apple/Project/Rush/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Apple/Project/Rush/src/views/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Apple/Project/Rush/src/views/Map.vue","mtime":1550242085765},{"path":"/Users/Apple/Project/Rush/node_modules/cache-loader/dist/cjs.js","mtime":1546418993104},{"path":"/Users/Apple/Project/Rush/node_modules/babel-loader/lib/index.js","mtime":1546418989373},{"path":"/Users/Apple/Project/Rush/node_modules/cache-loader/dist/cjs.js","mtime":1546418993104},{"path":"/Users/Apple/Project/Rush/node_modules/vue-loader/lib/index.js","mtime":1546418993639}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      group: '',\n      name: '',\n      items_string: '',\n      items: [],\n      points: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // var map_image = image('http://localhost:8000/stores/mapimage/sample/sample')\n    // console.log(map_image.width)\n    // console.log(map_image.height)\n    var draw = SVG('drawing').size(1000, 1000);\n    var group = this.group;\n    var name = this.name; // draw.rect(500, 500).move(100, 100).fill('#f06')\n    // var image = draw.image('http://localhost:8000/stores/mapimage/sample/sample')\n    // console.log(image.width())\n    // console.log(image.height())\n    // console.log(image)\n    // var image_url = 'http://localhost:8000/stores/mapimage/${this.group}/${this.name}'\n\n    var image = draw.image('http://localhost:8000/stores/mapimage/' + group + '/' + name).loaded(function (loader) {\n      this.size(loader.width, loader.height); // console.log(this.width())\n      // console.log(this.height())\n    });\n    this.$http.get('http://localhost:8000/stores/mappoint/' + group + '/' + name).then(function (response) {\n      console.log(response.data); // draw point\n\n      var data = response.data;\n      _this.points = data;\n\n      _this.$http.get('http://localhost:8000/stores/' + group + '/' + name + '/route/' + _this.items_string).then(function (response) {\n        // console.log(response.data)\n        var path = response.data.path;\n        var path_point = [];\n        var select_path_point = []; // var current = path[0]\n        // for (var i = 1; i < path.length; i++) {\n        //     console.log(path[i])\n        //     console.log(this.points)\n        //     var pre_x = this.points[current][0]\n        //     var pre_y = this.points[current][1]\n        //     var cur_x = this.points[path[i]][0]\n        //     var cur_y = this.points[path[i]][1]\n        //     var line = draw.line(pre_x, pre_y, cur_x, cur_y).stroke({ width: 1 })\n        //     current = path[i]\n        // }\n\n        for (var i = 0; i < path.length; i++) {\n          path_point.push([_this.points[path[i]][0], _this.points[path[i]][1]]);\n        } // console.log(path_point)\n\n\n        var keys = _this.items_string.split(';');\n\n        _this.$http.get('http://localhost:8000/stores/' + group + '/' + name).then(function (response) {\n          console.log('AAAAAAA');\n          console.log(response.data);\n          var names = response.data;\n\n          for (var key in data) {\n            // console.log(data[key])\n            if (key in names) {\n              var x = data[key][0];\n              var y = data[key][1];\n              draw.circle(10).attr({\n                fill: '#000',\n                'fill-opacity': 0.15\n              }).move(x - 5, y - 5);\n            }\n          }\n\n          var polyline = draw.polyline(path_point);\n          polyline.fill('none');\n          polyline.stroke({\n            color: '#f06',\n            width: 4,\n            linecap: 'round',\n            linejoin: 'round',\n            'opacity': 0.6\n          });\n\n          for (var i = 0; i < keys.length; i++) {\n            // select_path_point.push([this.points[keys[i]][0], this.points[keys[i]][1]])\n            var x = _this.points[keys[i]][0];\n            var y = _this.points[keys[i]][1];\n            draw.circle(20).attr({\n              fill: '#f06',\n              'fill-opacity': 1\n            }).center(x, y);\n          } // polyline.animate(3000).plot(path_point)\n\n\n          draw.circle(25).attr({\n            fill: '#4b7',\n            'fill-opacity': 1\n          }).center(_this.points['START'][0], _this.points['START'][1]);\n          draw.circle(25).attr({\n            fill: '#4b7',\n            'fill-opacity': 1\n          }).center(_this.points['END'][0], _this.points['END'][1]);\n          var path_string = 'm ' + path_point[0][0] + ',' + path_point[0][1] + ' ';\n\n          for (var i = 1; i < path_point.length; i++) {\n            path_string += path_point[i][0] - path_point[i - 1][0] + ',' + (path_point[i][1] - path_point[i - 1][1]) + ' ';\n          }\n\n          console.log(path_string);\n          var ppp = draw.path(path_string); // ppp.stroke({ color: '#f06', width: 4, linecap: 'round', linejoin: 'round' })\n\n          ppp.fill('none');\n          var length = ppp.length();\n          var current = draw.circle(20).move(path_point[0][0] - 10, path_point[0][1] - 10);\n          current.attr({\n            fill: '#17f'\n          }); // current.animate(300).move(path_point[1][0]-10, path_point[1][1]-10).loop()\n          // // current.finish()\n          // current.animate(600).move(path_point[2][0]-10, path_point[2][1]-10).loop()\n          // // rect.animate(3000).move(100, 100).after(function(situation) {\n          // //     this.animate().attr({ fill: '#f06' })\n          // // })\n\n          current.animate(length * 5, '<>').during(function (pos, morph, eased) {\n            var p = ppp.pointAt(eased * length);\n            current.center(p.x, p.y);\n          }).loop();\n\n          for (var i = 0; i < keys.length; i++) {\n            // select_path_point.push([this.points[keys[i]][0], this.points[keys[i]][1]])\n            var x = _this.points[keys[i]][0];\n            var y = _this.points[keys[i]][1];\n            var text = draw.text(names[keys[i]]).move(x, y - 10);\n            text.stroke({\n              color: '#fff',\n              opacity: 0.9,\n              width: 3\n            });\n            draw.text(names[keys[i]]).move(x, y - 10);\n          }\n        });\n      });\n    });\n  },\n  created: function created() {\n    this.group = this.$route.params.group;\n    this.name = this.$route.params.name;\n    this.items_string = this.$route.params.items;\n  }\n};",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAMA,MAAA,MAAA,EAAA;AANA,KAAA;AASA,GAXA;AAYA,EAAA,OAZA,qBAYA;AAAA;;AAEA;AACA;AACA;AAEA,QAAA,IAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AAEA,QAAA,KAAA,GAAA,KAAA,KAAA;AACA,QAAA,IAAA,GAAA,KAAA,IAAA,CATA,CAUA;AAEA;AACA;AACA;AACA;AAEA;;AACA,QAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,2CAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EAAA,MAAA,CAAA,UAAA,MAAA,EAAA;AACA,WAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,EADA,CAEA;AACA;AACA,KAJA,CAAA;AAMA,SAAA,KAAA,CAAA,GAAA,CAAA,2CAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,EADA,CAEA;;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,IAAA;;AAEA,MAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,kCAAA,KAAA,GAAA,GAAA,GAAA,IAAA,GAAA,SAAA,GAAA,KAAA,CAAA,YAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AAEA,YAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AAEA,YAAA,UAAA,GAAA,EAAA;AACA,YAAA,iBAAA,GAAA,EAAA,CANA,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,UAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,SAvBA,CAwBA;;;AAEA,YAAA,IAAA,GAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,GAAA,CAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,kCAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,cAAA,KAAA,GAAA,QAAA,CAAA,IAAA;;AAEA,eAAA,IAAA,GAAA,IAAA,IAAA,EAAA;AACA;AAEA,gBAAA,GAAA,IAAA,KAAA,EAAA;AAEA,kBAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,kBAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,cAAA,IAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AAAA,gBAAA,IAAA,EAAA,MAAA;AAAA,gCAAA;AAAA,eAAA,EAAA,IAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA;AACA;AACA;;AAEA,cAAA,QAAA,GAAA,IAAA,CAAA,QAAA,CAAA,UAAA,CAAA;AACA,UAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA;AAAA,YAAA,KAAA,EAAA,MAAA;AAAA,YAAA,KAAA,EAAA,CAAA;AAAA,YAAA,OAAA,EAAA,OAAA;AAAA,YAAA,QAAA,EAAA,OAAA;AAAA,uBAAA;AAAA,WAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA;AACA,gBAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,YAAA,IAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AAAA,cAAA,IAAA,EAAA,MAAA;AAAA,8BAAA;AAAA,aAAA,EAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,WAzBA,CA0BA;;;AAEA,UAAA,IAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,MAAA;AAAA,4BAAA;AAAA,WAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACA,UAAA,IAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,MAAA;AAAA,4BAAA;AAAA,WAAA,EAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAEA,cAAA,WAAA,GAAA,OAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,WAAA,IAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,GAAA,IAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA;AACA;;AAEA,UAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AAEA,cAAA,GAAA,GAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAtCA,CAuCA;;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,MAAA;AACA,cAAA,MAAA,GAAA,GAAA,CAAA,MAAA,EAAA;AAEA,cAAA,OAAA,GAAA,IAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,EAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA,EA5CA,CA6CA;AACA;AACA;AAEA;AACA;AACA;;AAEA,UAAA,OAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA,IAAA,EAAA,MAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,gBAAA,CAAA,GAAA,GAAA,CAAA,OAAA,CAAA,KAAA,GAAA,MAAA,CAAA;AACA,YAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,WAHA,EAGA,IAHA;;AAMA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA;AACA,gBAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,gBAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;AACA,YAAA,IAAA,CAAA,MAAA,CAAA;AAAA,cAAA,KAAA,EAAA,MAAA;AAAA,cAAA,OAAA,EAAA,GAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAAA;AACA,YAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA;AACA;AACA,SApEA;AAsEA,OAlGA;AAoGA,KA3GA;AA6GA,GAjJA;AAkJA,EAAA,OAlJA,qBAkJA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA,SAAA,IAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA;AACA,SAAA,YAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAtJA,CAAA","sourcesContent":["<template>\n<div class=\"container is-fullhd\" style=\"height:100%;\">\n     <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div class=\"navbar-menu\">\n        <div class=\"navbar-start\">\n          <div class=\"navbar-item\">\n            <a class=\"button is-text is-myBack\" @click=\"$router.push({name: 'select', params:{group:group, name:name}})\"><span class=\"icon\"><i class=\"fas fa-chevron-left\"></i></span></a>\n         <div class=\"navbar-brand\">\n        <a class=\"navbar-item\">\n          <!-- <img src=\"@/assets/RUSHlogo.png\" alt=\"logo\" class=\"logo\"> -->\n            <h5 class=\"subtitle is-4 has-text-dark\">{{name}}</h5>\n        </a>\n      </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n    <br><br>\n<div class=\"columns\">\n    <!-- <img src=\"http://localhost:8000/stores/mapimage/sample/sample\"> -->\n    <div style=\"overflow-y: scroll; height:1200px;\">\n    <div id=\"drawing\"></div>\n    </div>\n    </div>\n</div>    \n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            group: '',\n            name: '',\n            items_string: '',\n            items: [],\n\n            points: {}\n\n        }\n    },\n    mounted () {\n\n        // var map_image = image('http://localhost:8000/stores/mapimage/sample/sample')\n        // console.log(map_image.width)\n        // console.log(map_image.height)\n\n        var draw = SVG('drawing').size(1000, 1000)\n\n        var group = this.group\n        var name = this.name\n        // draw.rect(500, 500).move(100, 100).fill('#f06')\n\n        // var image = draw.image('http://localhost:8000/stores/mapimage/sample/sample')\n        // console.log(image.width())\n        // console.log(image.height())\n        // console.log(image)\n\n        // var image_url = 'http://localhost:8000/stores/mapimage/${this.group}/${this.name}'\n        var image = draw.image('http://localhost:8000/stores/mapimage/'+group+'/'+name).loaded(function(loader) {\n            this.size(loader.width, loader.height)\n            // console.log(this.width())\n            // console.log(this.height())\n        })\n\n        this.$http.get('http://localhost:8000/stores/mappoint/'+group+'/'+name)\n        .then(response => {\n            console.log(response.data)\n            // draw point\n            var data = response.data\n            this.points = data\n\n            this.$http.get('http://localhost:8000/stores/'+group+'/'+name+'/route/'+this.items_string)\n            .then(response => {\n                // console.log(response.data)\n\n                var path = response.data.path\n\n                var path_point = []\n                var select_path_point = []\n                // var current = path[0]\n                // for (var i = 1; i < path.length; i++) {\n                    //     console.log(path[i])\n                //     console.log(this.points)\n                //     var pre_x = this.points[current][0]\n                //     var pre_y = this.points[current][1]\n\n                //     var cur_x = this.points[path[i]][0]\n                //     var cur_y = this.points[path[i]][1]\n\n                //     var line = draw.line(pre_x, pre_y, cur_x, cur_y).stroke({ width: 1 })\n\n                //     current = path[i]\n                // }\n                for (var i = 0; i < path.length; i++) {\n                    path_point.push([this.points[path[i]][0], this.points[path[i]][1]])\n                }\n                // console.log(path_point)\n\n                var keys = this.items_string.split(';')\n                this.$http.get('http://localhost:8000/stores/'+group+'/'+name)\n                .then(response => {\n                    console.log('AAAAAAA')\n                    console.log(response.data)\n                    var names = response.data\n                    \n                    for (var key in data) {\n                        // console.log(data[key])\n        \n                        if (key in names) {\n                            \n                            var x = data[key][0]\n                            var y = data[key][1]\n                            draw.circle(10).attr({fill: '#000', 'fill-opacity': 0.15}).move(x-5, y-5)\n                        }\n                    }\n\n                    var polyline = draw.polyline(path_point)\n                    polyline.fill('none')\n                    polyline.stroke({ color: '#f06', width: 4, linecap: 'round', linejoin: 'round', 'opacity':0.6 })\n                    \n                    for (var i = 0; i < keys.length; i++) {\n                        // select_path_point.push([this.points[keys[i]][0], this.points[keys[i]][1]])\n                        var x = this.points[keys[i]][0]\n                        var y = this.points[keys[i]][1]\n                        draw.circle(20).attr({fill: '#f06', 'fill-opacity': 1}).center(x, y)\n                    }\n                    // polyline.animate(3000).plot(path_point)\n\n                    draw.circle(25).attr({fill: '#4b7', 'fill-opacity': 1}).center(this.points['START'][0], this.points['START'][1])\n                    draw.circle(25).attr({fill: '#4b7', 'fill-opacity': 1}).center(this.points['END'][0], this.points['END'][1])\n\n                    var path_string = 'm '+path_point[0][0] + ',' + path_point[0][1] + ' '\n                    for (var i = 1; i < path_point.length; i++) {\n                        path_string += (path_point[i][0] - path_point[i-1][0]) + ',' + (path_point[i][1] - path_point[i-1][1]) + ' '\n                    }\n\n                    console.log(path_string)\n\n                    var ppp = draw.path(path_string)\n                    // ppp.stroke({ color: '#f06', width: 4, linecap: 'round', linejoin: 'round' })\n                    ppp.fill('none')\n                    var length = ppp.length()\n\n                    var current = draw.circle(20).move(path_point[0][0]-10, path_point[0][1]-10)\n                    current.attr({fill: '#17f'})\n                    // current.animate(300).move(path_point[1][0]-10, path_point[1][1]-10).loop()\n                    // // current.finish()\n                    // current.animate(600).move(path_point[2][0]-10, path_point[2][1]-10).loop()\n\n                    // // rect.animate(3000).move(100, 100).after(function(situation) {\n                    // //     this.animate().attr({ fill: '#f06' })\n                    // // })\n\n                    current.animate(length*5, '<>').during(function(pos, morph, eased){\n                        var p = ppp.pointAt(eased * length)\n                        current.center(p.x, p.y)\n                    }).loop()\n\n\n                    for (var i = 0; i < keys.length; i++) {\n                        // select_path_point.push([this.points[keys[i]][0], this.points[keys[i]][1]])\n                        var x = this.points[keys[i]][0]\n                        var y = this.points[keys[i]][1]\n                        var text = draw.text(names[keys[i]]).move(x, y-10)\n                        text.stroke({ color: '#fff', opacity: 0.9, width: 3 })\n                        draw.text(names[keys[i]]).move(x, y-10)\n                    }\n                })\n                \n            })\n\n        })\n\n    },\n    created () {\n        this.group = this.$route.params.group\n        this.name = this.$route.params.name\n        this.items_string = this.$route.params.items\n    }\n\n\n}\n</script>\n\n<style scoped>\n\n.navbar {\n  background-color: #FDB849;\n  height: 60px;\n  position: fixed;\n  overflow: hidden;\n  width: 100%;\n  top: 0;\n}\n\n.navbar-menu {\n  margin-right: 0px !important;\n  margin-left: 0px;\n}\n\n.navbar-start {\n  padding-left: 12px;\n}\n\n.navbar-end {\n  padding-right: 10px;\n}\n</style>"],"sourceRoot":"src/views"}]}